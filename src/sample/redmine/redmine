os.loadAPI( "tMove" )
rednet.open("right")

-- rednet receiving subfunction, calls an event that is processed bye main loop, tagged "redmine"
function rednet_receive()
  while true do
   local id, message  = rednet.receive()
   if message == "term" then return false end
     
    os.queueEvent( "redmine",message, id)
  end
end


-- main loop
function eventProcessing()

  while true do
        local sEvent, param, param1, param2 = os.pullEvent()
        if sEvent == "redmine" then
           if param == "position" then
                 --- do stuff
           elseif param == "gohome" then
              ---do stuff
           
           elseif param == "side" then
              sideArm(20)
           
           elseif param == "main" then
 -- main tunneling call, some pre automated movement                  
                   tMove.turnRight()
                   tPathFinder.add("turnRight","main")
                   tMove.forward()
                   tPathFinder.add("forward","main")
-- main shaft gets 80 blocks deep , change it, every 4th "row" dig sideArm                
                  for i = 1,80 do 
                      tMine.mainShaft()
                      if math.fmod(i, 4) == 0 then
                       tMove.turnRight()
                       tPathFinder.add("turnRight","main")
                       tMove.up()
                       tPathFinder.add("up","main")
                       tMove.forward()
                       tPathFinder.add("forward","main")
                       tMine.sideArm(40)
                       tMove.back()
                       tMove.turnLeft()
                       tMove.down()
                       tPathFinder.delete("main")
                       tPathFinder.delete("main")
                       tPathFinder.delete("main")

                       tMove.turnLeft()
                       tPathFinder.add("turnLeft","main")
                       tMove.up()
                       tPathFinder.add("up","main")
                       tMove.forward()
                       tPathFinder.add("forward","main")
                       tMine.sideArm(40)
                       tMove.back()
                       tMove.turnRight()
                       tMove.down()
                       tPathFinder.delete("main")
                       tPathFinder.delete("main")
                       tPathFinder.delete("main")
                      end                 
                  end
                   tPathFinder.goWayBack()                  
                   tPathFinder.flash("main")
                   tPathFinder.flash("side")
                   tPathFinder.flash("scan")
                  
                  tMove.turnLeft()
                  tPathFinder.add("turnLeft","main")
                  tMove.forward()
                  tPathFinder.add("forward","main")              
                  for i = 1,40 do 
                      tMine.mainShaft()
                      if math.fmod(i, 4) == 0 then
                       tMove.turnRight()
                       tPathFinder.add("turnRight","main")
                       tMove.up()
                       tPathFinder.add("up","main")
                       tMove.forward()
                       tPathFinder.add("forward","main")
                       tMine.sideArm(40)
                       tMove.back()
                       tMove.turnLeft()
                       tMove.down()
                       tPathFinder.delete("main")
                       tPathFinder.delete("main")
                       tPathFinder.delete("main")

                       tMove.turnLeft()
                       tPathFinder.add("turnLeft","main")
                       tMove.up()
                       tPathFinder.add("up","main")
                       tMove.forward()
                       tPathFinder.add("forward","main")
                       tMine.sideArm(40)
                       tMove.back()
                       tMove.turnRight()
                       tMove.down()
                       tPathFinder.delete("main")
                       tPathFinder.delete("main")
                       tPathFinder.delete("main")
                      end
                   end
                   
                   tPathFinder.goWayBack()

                                 
                   

          end
       end
    end
end

print(parallel.waitForAny( rednet_receive, eventProcessing ))

