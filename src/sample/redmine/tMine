

-- Main 3 x 3 shaft
-- trys to place a block if it fails (block present) it scans if it is valuable (not one of 1st 4 blocks) if it is it starts digging


function mainShaft()
 

-- if not at least 1 inventory Slot is empty go back and drop junk
 if not tInv.hasSpace() then
    tPathFinder.goWayBack()
    tInv.dropJunk()
    tPathFinder.goWayTo()
 end
      
      
      tMove.up()
      tMove.up()
      tPathFinder.add("up","main")
      tPathFinder.add("up","main")
      
      tScan.tryDig()
      tMove.forward()
      tPathFinder.add("forward","main")
      if turtle.placeUp() == false then tScan.up() end
      
      tMove.turnLeft()
      tPathFinder.add("turnLeft","main")
      tScan.tryDig()
      tMove.forward()
      tPathFinder.add("forward","main")
      if turtle.place() == false then tScan.front() end
      if turtle.placeUp() == false then tScan.up() end

      turtle.digDown()
      tMove.down()
      tPathFinder.add("down","main")
      if turtle.place() == false then
         tScan.front() 
      end

      turtle.digDown()
      tMove.down()
      tPathFinder.add("down","main")
      if turtle.place() == false then
         tScan.front()
      end
      if turtle.placeDown() == false then
         tScan.down() 
      end
 
      tMove.up()
      tMove.up()   
      tPathFinder.add("up","main")
      tPathFinder.add("up","main")
      tMove.turnRight()
      tMove.turnRight()
      tPathFinder.add("turnRight","main")
      tPathFinder.add("turnRight","main")
  
      tMove.forward()
      tPathFinder.add("forward","main")
  
      tScan.tryDig()
      tMove.forward()
      tPathFinder.add("forward","main")
      if turtle.placeUp() == false then
         tScan.up() 
      end 
      if turtle.place() == false then
         tScan.front() 
      end
      
      turtle.digDown()
      tMove.down()
      tPathFinder.add("down","main")
      if turtle.place() == false then
         tScan.front() 
      end

      turtle.digDown()
      tMove.down()
      tPathFinder.add("down","main")
      if turtle.place() == false then
         tScan.front() 
      end
      if turtle.placeDown() == false then
         tScan.down()
      end
  
      tMove.turnRight()
      tMove.turnRight()
      tPathFinder.add("turnRight","main")
      tPathFinder.add("turnRight","main")
  
      tScan.tryDig()
      tMove.forward()
      tPathFinder.add("forward","main")
      if turtle.placeDown() == false then tScan.down() end
  
      tScan.tryDigUp()
      tMove.turnRight()
      tPathFinder.add("turnRight","main")
      
      for i = 1,19 do
          tPathFinder.delete("main")
      end
  
      tPathFinder.add("forward","main")
end


-- like main shaft but allready with digging depth
function sideArm(pLength)
   for i = 1,pLength do
       
       tScan.tryDig()
       tMove.forward()
       tPathFinder.add("forward","side")
       if turtle.placeUp() == false then tScan.up() end
      
       
       tMove.turnLeft()
       tPathFinder.add("turnLeft","side")
       if turtle.place() == false then tScan.front() end
     
  
       tMove.turnLeft()
       tPathFinder.add("turnLeft","side")
       tMove.turnLeft()
       tPathFinder.add("turnLeft","side")
       if turtle.place() == false then tScan.front() end
      
  
       turtle.digDown()
       tMove.down()
       tPathFinder.add("down","side")
       if turtle.place() == false then tScan.front() end
       
  
       tMove.turnLeft()
       tPathFinder.add("turnLeft","side")
       tMove.turnLeft()
       tPathFinder.add("turnLeft","side")
       if turtle.place() == false then tScan.front() end
       
       if turtle.placeDown() == false then tScan.down() end
       
  
       tMove.up() 
       tPathFinder.add("up","side")
       tMove.turnRight()
       tPathFinder.add("turnRight","side")
       for i = 1,9 do
           tPathFinder.delete("side")
       end
       tPathFinder.add("forward","side")
   end
   for i = 1, pLength do
       tMove.back()
       tPathFinder.delete("side")
   end
end
