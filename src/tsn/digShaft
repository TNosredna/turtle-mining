-- To avoid dealing with namespaces and imported scripts not
-- being able to access local variables, I've decided to inject
-- the source code when it's loaded on the filesystem.
--INJECT/turtleUtils


-- START OF LOCAL SCRIPT
local WALL_FILLER_SLOT = 1;
local BUCKET_SLOT = 16;

local args={...};
depth = args[1];

local function digShaftLayer(startingTurnDirection)
    log (fine, "Entering digShaftLayer("..startingTurnDirection..")", currentLogIndent);
    currentLogIndent = currentLogIndent + 1;
    local turnDirection = startingTurnDirection or right;
    local detectFirst = true;
    local overflow = true;

    for i=1,8 do
        placeItem(forward, WALL_FILLER_SLOT, overflow, detectFirst);
        turn(turnDirection);
        moveWithDig(forward)
        if (i==4) then
            turnDirection = getOppositeDirection(turnDirection);
            turn(turnDirection);
        end;
    end;

    currentLogIndent = currentLogIndent - 1;
    log (fine, "Exiting digShaftLayer()", currentLogIndent);
    return turnDirection;
end;

local function digMineShaft(depth, startingTurnDirection)
    log (fine, "Entering digMineShaft("..depth..","..startingTurnDirection..")", currentLogIndent);
    local turnDirection = startingTurnDirection or right;
    moveWithDig(down)
    for i=1,depth do
        turnDirection = digShaftLayer(turnDirection);
        moveWithDig(down);
        if (i==1) then placeItem(up, BUCKET_SLOT); end;
    end;

    move(up, depth);
    placeItem(forward, BUCKET_SLOT);

    currentLogIndent = currentLogIndent - 1;
    log (fine, "Exiting digMineShaft()", currentLogIndent);
end;

if (depth==nil or depth=="") then
    fs.delete(logFileName);
    print ("How many blocks down should the station roof be located? (depth - 13 is normal)");
    depth = io.read();
    tonumber(depth);
end;

digMineShaft(depth, right);